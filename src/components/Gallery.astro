---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";

// Import all images from the 2024-edition folder - you'll need to import them individually for Astro:assets
// For demonstration, I'll show the structure you should follow:
// import image1 from "/2024-edition/ESM_2415-2.jpg";
// import image2 from "/2024-edition/ESM_2413-2.jpg";
// etc.

// For now, using the string paths but recommend importing actual assets
const images = [
    {
        src: "/2024-edition/ESM_2415-2.jpg",
        alt: "Corredores en la línea de salida - 15K URRAO 2024",
        description: "El momento previo al gran desafío"
    },
    {
        src: "/2024-edition/ESM_2413-2.jpg", 
        alt: "Participantes durante la carrera - 15K URRAO 2024",
        description: "Esfuerzo y determinación en cada paso"
    },
    {
        src: "/2024-edition/ESM_2408-2.jpg",
        alt: "Paisajes de Urrao durante la carrera - 15K URRAO 2024", 
        description: "La belleza natural que acompaña cada kilómetro"
    },
    {
        src: "/2024-edition/ESM_2405-2.jpg",
        alt: "Momento de celebración - 15K URRAO 2024",
        description: "La alegría del logro alcanzado"
    },
    {
        src: "/2024-edition/ESM_2404-2.jpg",
        alt: "Corredores en acción - 15K URRAO 2024",
        description: "Superación personal en cada zancada"
    },
    {
        src: "/2024-edition/ESM_2402-2.jpg",
        alt: "Ambiente de la carrera - 15K URRAO 2024",
        description: "La comunidad unida por el deporte"
    },
    {
        src: "/2024-edition/ESM_2398-2.jpg",
        alt: "Finalistas cruzando la meta - 15K URRAO 2024",
        description: "El momento más esperado del evento"
    },
    {
        src: "/2024-edition/ESM_2396-2.jpg",
        alt: "Premiación y reconocimientos - 15K URRAO 2024",
        description: "Celebrando a nuestros campeones"
    },
];
---

<section
    id="gallery"
    class="relative min-h-screen py-6 sm:py-10 bg-gradient-to-br from-primary-900 via-primary-500 to-secondary-500 overflow-hidden"
>
    <!-- Grid pattern overlay -->
    <div
        class="absolute inset-0 opacity-5"
        style="background-image: radial-gradient(circle, #ffffff 1px, transparent 1px); background-size: 30px 30px; sm:background-size: 50px 50px;"
    >
    </div>

    <div class="relative z-10 max-w-7xl mx-auto px-3 sm:px-4 lg:px-8">
        <!-- Header Section -->
        <div class="text-center mb-8 sm:mb-12 lg:mb-16">
            <div
                class="inline-flex items-center px-3 sm:px-4 py-1.5 sm:py-2 rounded-full bg-secondary-500/10 border border-secondary-500/20 mb-4 sm:mb-6"
            >
                <Icon
                    name="tabler/camara"
                    class="w-4 h-4 sm:w-5 sm:h-5 text-secondary-400 mr-1.5 sm:mr-2"
                />
                <span class="text-secondary-400 text-xs sm:text-sm font-medium"
                    >Memorias 2024</span
                >
            </div>
            <h1
                class="font-nova text-5xl md:text-7xl lg:text-8xl text-white mb-4 sm:mb-6 tracking-tight"
            >
                <span
                    class="bg-gradient-to-r from-secondary via-secondary-400 to-white bg-clip-text text-transparent"
                >
                    Galería
                </span>
            </h1>
            <p class="text-white text-base sm:text-lg lg:text-xl max-w-2xl mx-auto leading-relaxed mb-6 sm:mb-8 px-4">
                Revive los momentos más emocionantes de la edición 2024. 
                Cada imagen cuenta una historia de esfuerzo, pasión y superación.
            </p>
            
            <!-- Stats Badge -->
            <div
                class="inline-flex items-center space-x-3 sm:space-x-6 px-4 sm:px-6 py-2 sm:py-3 bg-white/5 backdrop-blur-lg rounded-full border border-white/10"
            >
                <div class="text-center">
                    <div class="text-lg sm:text-2xl font-bold text-white">{images.length}</div>
                    <div class="text-xs sm:text-sm text-slate-400">Fotografías</div>
                </div>
                <div class="w-px h-6 sm:h-8 bg-white/20"></div>
                <div class="text-center">
                    <div class="text-lg sm:text-2xl font-bold text-white">2024</div>
                    <div class="text-xs sm:text-sm text-slate-400">Edición</div>
                </div>
                <div class="w-px h-6 sm:h-8 bg-white/20"></div>
                <div class="text-center">
                    <div class="text-lg sm:text-2xl font-bold text-white">∞</div>
                    <div class="text-xs sm:text-sm text-slate-400">Memorias</div>
                </div>
            </div>
        </div>

        <!-- Gallery Grid -->
        <div class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-2 sm:gap-3 md:gap-4 mb-8 sm:mb-12">
            {images.map((image, index) => (
                <div 
                    class="group relative overflow-hidden rounded-xl sm:rounded-2xl cursor-pointer transform transition-all duration-300 hover:scale-[1.02] active:scale-[0.98] touch-manipulation"
                    data-lightbox-trigger
                    data-image-src={image.src}
                    data-image-alt={image.alt}
                    data-image-description={image.description}
                    data-image-index={index}
                >
                    <!-- Image container -->
                    <div class="relative aspect-square overflow-hidden rounded-xl sm:rounded-2xl">
                        <!-- For optimal performance, use Image component when importing assets -->
                        <img
                            src={image.src}
                            alt={image.alt}
                            class="w-full h-full object-cover transition-all duration-500 group-hover:scale-110 group-hover:rotate-1"
                            loading="lazy"
                            decoding="async"
                        />
                        
                        <!-- Hover overlay with preview info -->
                        <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 group-active:opacity-100 transition-all duration-300 z-20">
                            <div class="absolute bottom-2 sm:bottom-4 left-2 sm:left-4 right-2 sm:right-4">
                                <div class="flex items-center justify-between">
                                    <div class="flex-1 pr-2 sm:pr-3">
                                        <div class="text-white text-xs sm:text-sm font-medium mb-0.5 sm:mb-1">
                                            #{index + 1} - 15K URRAO 2024
                                        </div>
                                        <div class="text-white/80 text-xs leading-relaxed line-clamp-2">
                                            {image.description}
                                        </div>
                                    </div>
                                    <div class="w-8 h-8 sm:w-10 sm:h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center group-hover:bg-secondary-500/40 transition-colors duration-300 flex-shrink-0">
                                        <Icon
                                            name="tabler/medal"
                                            class="w-4 h-4 sm:w-5 sm:h-5 text-white"
                                        />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Corner badge -->
                    <div
                        class="absolute top-2 sm:top-3 right-2 sm:right-3 w-6 h-6 sm:w-7 sm:h-7 bg-gradient-to-br from-secondary-500 to-secondary-600 rounded-full flex items-center justify-center shadow-lg z-30 transform transition-transform duration-300 group-hover:scale-110"
                    >
                        <span class="text-white text-xs font-bold">{index + 1}</span>
                    </div>
                </div>
            ))}
        </div>

        <!-- Gallery Controls -->
        <div class="flex justify-center items-center space-x-3 sm:space-x-4 mb-8 sm:mb-12">
            <button
                id="prev-batch"
                class="flex items-center space-x-1.5 sm:space-x-2 px-3 sm:px-4 py-2 bg-white/10 hover:bg-white/20 border border-white/20 hover:border-white/30 rounded-xl transition-all duration-300 text-white touch-manipulation"
            >
                <Icon name="tabler/caret-left" class="w-4 h-4" />
                <span class="text-xs sm:text-sm">Anterior</span>
            </button>
            
            <div class="flex items-center space-x-1.5 sm:space-x-2">
                <div class="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-secondary-500 rounded-full"></div>
                <div class="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-white/30 rounded-full"></div>
                <div class="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-white/30 rounded-full"></div>
            </div>
            
            <button
                id="next-batch"
                class="flex items-center space-x-1.5 sm:space-x-2 px-3 sm:px-4 py-2 bg-white/10 hover:bg-white/20 border border-white/20 hover:border-white/30 rounded-xl transition-all duration-300 text-white touch-manipulation"
            >
                <span class="text-xs sm:text-sm">Siguiente</span>
                <Icon name="tabler/caret-right" class="w-4 h-4" />
            </button>
        </div>

        <!-- CTA Section -->
        <div class="text-center">
            <div
                class="inline-flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-6 px-4 sm:px-6 lg:px-8 py-4 sm:py-6 bg-white/5 backdrop-blur-lg rounded-xl sm:rounded-2xl border border-white/10"
            >
                <div class="text-center md:text-left">
                    <h3 class="text-white text-lg sm:text-xl font-semibold mb-2">
                        ¿Quieres ser parte de la historia?
                    </h3>
                    <p class="text-white text-sm sm:text-base">
                        Únete a la próxima edición y crea tus propios momentos inolvidables
                    </p>
                </div>
                <a
                    href="#distances"
                    class="group/cta relative overflow-hidden bg-gradient-to-r from-secondary-500 to-secondary-600 hover:from-secondary-600 hover:to-secondary-700 text-white font-semibold py-2.5 sm:py-3 px-4 sm:px-6 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-secondary-500/25 touch-manipulation"
                >
                    <div
                        class="absolute inset-0 bg-gradient-to-r from-white/0 via-white/10 to-white/0 -translate-x-full group-hover/cta:translate-x-full transition-transform duration-700"
                    >
                    </div>
                    <div class="relative flex items-center space-x-1.5 sm:space-x-2">
                        <span class="text-white text-sm sm:text-base">Inscríbete 2025</span>
                        <Icon
                            name="tabler/arrow-narrow-right"
                            class="w-4 h-4 transition-transform duration-300 group-hover/cta:translate-x-1"
                        />
                    </div>
                </a>
            </div>
        </div>
    </div>

    <!-- Lightbox Modal -->
    <div
        id="lightbox-modal"
        class="fixed inset-0 z-50 bg-black/90 backdrop-blur-xl opacity-0 invisible transition-all duration-300"
    >
        <!-- Modal Background -->
        <div class="absolute inset-0" id="lightbox-backdrop"></div>
        
        <!-- Modal Content -->
        <div class="relative h-full flex items-center justify-center p-2 sm:p-4">
            <!-- Close Button -->
            <button
                id="lightbox-close"
                class="absolute top-2 sm:top-6 right-2 sm:right-6 z-60 w-10 h-10 sm:w-12 sm:h-12 bg-white/10 hover:bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center transition-all duration-300 group touch-manipulation"
            >
                <Icon name="tabler/x" class="w-5 h-5 sm:w-6 sm:h-6 text-white group-hover:scale-110 transition-transform duration-300" />
            </button>
            
            <!-- Navigation Buttons -->
            <button
                id="lightbox-prev"
                class="absolute left-2 sm:left-6 top-1/2 -translate-y-1/2 z-60 w-10 h-10 sm:w-12 sm:h-12 bg-white/10 hover:bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center transition-all duration-300 group touch-manipulation"
            >
                <Icon name="tabler/caret-left" class="w-5 h-5 sm:w-6 sm:h-6 text-white group-hover:scale-110 transition-transform duration-300" />
            </button>
            
            <button
                id="lightbox-next"
                class="absolute right-2 sm:right-6 top-1/2 -translate-y-1/2 z-60 w-10 h-10 sm:w-12 sm:h-12 bg-white/10 hover:bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center transition-all duration-300 group touch-manipulation"
            >
                <Icon name="tabler/caret-right" class="w-5 h-5 sm:w-6 sm:h-6 text-white group-hover:scale-110 transition-transform duration-300" />
            </button>
            
            <!-- Image Container -->
            <div class="max-w-full sm:max-w-5xl max-h-full flex flex-col items-center w-full">
                <div class="relative max-w-full max-h-[60vh] sm:max-h-[70vh] overflow-hidden rounded-lg sm:rounded-2xl shadow-2xl">
                    <img
                        id="lightbox-image"
                        src=""
                        alt=""
                        class="max-w-full max-h-full object-contain"
                    />
                    
                    <!-- Loading Spinner -->
                    <div id="lightbox-loading" class="absolute inset-0 flex items-center justify-center bg-black/50">
                        <div class="animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-b-2 border-secondary-500"></div>
                    </div>
                </div>
                
                <!-- Image Info -->
                <div class="mt-4 sm:mt-6 text-center max-w-2xl px-4">
                    <h3 id="lightbox-title" class="text-white text-lg sm:text-xl font-bold mb-2"></h3>
                    <p id="lightbox-description" class="text-white/80 text-sm sm:text-lg leading-relaxed"></p>
                    <div class="mt-3 sm:mt-4 flex items-center justify-center space-x-3 sm:space-x-4">
                        <span id="lightbox-counter" class="text-white/60 text-xs sm:text-sm"></span>
                        <div class="w-px h-3 sm:h-4 bg-white/20"></div>
                        <span class="text-white/60 text-xs sm:text-sm">15K URRAO 2024</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    /* Enhanced glassmorphism effects */
    .backdrop-blur-lg {
        backdrop-filter: blur(16px);
        -webkit-backdrop-filter: blur(16px);
    }

    .backdrop-blur-sm {
        backdrop-filter: blur(4px);
        -webkit-backdrop-filter: blur(4px);
    }

    .backdrop-blur-xl {
        backdrop-filter: blur(24px);
        -webkit-backdrop-filter: blur(24px);
    }

    /* Smooth image loading */
    img {
        image-rendering: -webkit-optimize-contrast;
        image-rendering: crisp-edges;
    }

    /* Lightbox animations */
    .lightbox-open {
        opacity: 1 !important;
        visibility: visible !important;
    }

    /* Gallery item animations */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .gallery-item-animate {
        animation: fadeInUp 0.6s ease-out forwards;
    }

    /* Custom scrollbar */
    .gallery-container {
        scrollbar-width: thin;
        scrollbar-color: rgba(255, 255, 255, 0.3) transparent;
    }

    .gallery-container::-webkit-scrollbar {
        width: 6px;
    }

    .gallery-container::-webkit-scrollbar-track {
        background: transparent;
    }

    .gallery-container::-webkit-scrollbar-thumb {
        background-color: rgba(255, 255, 255, 0.3);
        border-radius: 3px;
    }

    .gallery-container::-webkit-scrollbar-thumb:hover {
        background-color: rgba(255, 255, 255, 0.5);
    }

    /* Mobile optimizations */
    .touch-manipulation {
        touch-action: manipulation;
    }

    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    /* Responsive grid pattern */
    @media (max-width: 640px) {
        .grid-pattern {
            background-size: 30px 30px;
        }
    }

    /* Mobile lightbox improvements */
    @media (max-width: 640px) {
        #lightbox-modal .max-w-full {
            width: 100%;
            margin: 0;
        }
        
        #lightbox-modal .max-h-\[60vh\] {
            max-height: 60vh;
        }
    }

    /* Prevent zoom on input focus for iOS */
    @media screen and (-webkit-min-device-pixel-ratio: 0) {
        input, select, textarea {
            font-size: 16px;
        }
    }
</style>

<script>
    // Enhanced Gallery with Lightbox functionality and mobile support
    class GalleryLightbox {
        constructor() {
            this.currentIndex = 0;
            this.images = [];
            this.modal = null;
            this.lightboxImage = null;
            this.lightboxTitle = null;
            this.lightboxDescription = null;
            this.lightboxCounter = null;
            this.lightboxLoading = null;
            this.isMobile = window.innerWidth <= 768;
            this.touchStartX = 0;
            this.touchStartY = 0;
            
            this.init();
        }
        
        init() {
            // Get DOM elements
            this.modal = document.getElementById('lightbox-modal');
            this.lightboxImage = document.getElementById('lightbox-image');
            this.lightboxTitle = document.getElementById('lightbox-title');
            this.lightboxDescription = document.getElementById('lightbox-description');
            this.lightboxCounter = document.getElementById('lightbox-counter');
            this.lightboxLoading = document.getElementById('lightbox-loading');
            
            // Collect image data
            this.collectImages();
            
            // Bind events
            this.bindEvents();
            
            // Initialize lazy loading
            this.initLazyLoading();
            
            // Initialize gallery animations
            this.initGalleryAnimations();
            
            // Handle resize events
            this.handleResize();
        }
        
        collectImages() {
            const triggers = document.querySelectorAll('[data-lightbox-trigger]');
            this.images = Array.from(triggers).map(trigger => ({
                src: trigger.dataset.imageSrc,
                alt: trigger.dataset.imageAlt,
                description: trigger.dataset.imageDescription,
                index: parseInt(trigger.dataset.imageIndex)
            }));
        }
        
        bindEvents() {
            // Gallery item clicks
            document.querySelectorAll('[data-lightbox-trigger]').forEach((trigger, index) => {
                trigger.addEventListener('click', (e) => {
                    e.preventDefault();
                    this.openLightbox(index);
                });
            });
            
            // Modal controls
            document.getElementById('lightbox-close')?.addEventListener('click', () => this.closeLightbox());
            document.getElementById('lightbox-backdrop')?.addEventListener('click', () => this.closeLightbox());
            document.getElementById('lightbox-prev')?.addEventListener('click', () => this.prevImage());
            document.getElementById('lightbox-next')?.addEventListener('click', () => this.nextImage());
            
            // Touch events for mobile
            if (this.isMobile) {
                this.bindTouchEvents();
            }
            
            // Keyboard navigation
            document.addEventListener('keydown', (e) => {
                if (!this.modal?.classList.contains('lightbox-open')) return;
                
                switch(e.key) {
                    case 'Escape':
                        this.closeLightbox();
                        break;
                    case 'ArrowLeft':
                        this.prevImage();
                        break;
                    case 'ArrowRight':
                        this.nextImage();
                        break;
                }
            });
        }
        
        bindTouchEvents() {
            const modal = this.modal;
            if (!modal) return;
            
            modal.addEventListener('touchstart', (e) => {
                this.touchStartX = e.touches[0].clientX;
                this.touchStartY = e.touches[0].clientY;
            }, { passive: true });
            
            modal.addEventListener('touchend', (e) => {
                if (!this.touchStartX || !this.touchStartY) return;
                
                const touchEndX = e.changedTouches[0].clientX;
                const touchEndY = e.changedTouches[0].clientY;
                const diffX = this.touchStartX - touchEndX;
                const diffY = this.touchStartY - touchEndY;
                
                // Minimum swipe distance
                const minSwipeDistance = 50;
                
                // Check if it's a horizontal swipe (more horizontal than vertical)
                if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > minSwipeDistance) {
                    if (diffX > 0) {
                        // Swipe left - next image
                        this.nextImage();
                    } else {
                        // Swipe right - previous image
                        this.prevImage();
                    }
                }
                
                // Reset touch coordinates
                this.touchStartX = 0;
                this.touchStartY = 0;
            }, { passive: true });
        }
        
        handleResize() {
            window.addEventListener('resize', () => {
                this.isMobile = window.innerWidth <= 768;
                if (this.isMobile) {
                    this.bindTouchEvents();
                }
            });
        }
        
        openLightbox(index) {
            this.currentIndex = index;
            this.modal?.classList.add('lightbox-open');
            this.loadImage();
            
            // Prevent body scroll
            document.body.style.overflow = 'hidden';
        }
        
        closeLightbox() {
            this.modal?.classList.remove('lightbox-open');
            
            // Restore body scroll
            document.body.style.overflow = '';
        }
        
        loadImage() {
            const image = this.images[this.currentIndex];
            if (!image) return;
            
            // Show loading spinner
            this.lightboxLoading?.classList.remove('hidden');
            
            // Create new image to preload
            const img = new Image();
            img.onload = () => {
                // Hide loading spinner
                this.lightboxLoading?.classList.add('hidden');
                
                // Update lightbox content
                if (this.lightboxImage) {
                    this.lightboxImage.src = image.src;
                    this.lightboxImage.alt = image.alt;
                }
                
                if (this.lightboxTitle) {
                    this.lightboxTitle.textContent = image.alt;
                }
                
                if (this.lightboxDescription) {
                    this.lightboxDescription.textContent = image.description;
                }
                
                if (this.lightboxCounter) {
                    this.lightboxCounter.textContent = `${this.currentIndex + 1} de ${this.images.length}`;
                }
            };
            
            img.onerror = () => {
                this.lightboxLoading?.classList.add('hidden');
                console.error('Error loading image:', image.src);
            };
            
            img.src = image.src;
        }
        
        nextImage() {
            this.currentIndex = (this.currentIndex + 1) % this.images.length;
            this.loadImage();
        }
        
        prevImage() {
            this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;
            this.loadImage();
        }
        
        initLazyLoading() {
            if ('IntersectionObserver' in window) {
                const imageObserver = new IntersectionObserver((entries, observer) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            img.classList.add('loaded');
                            observer.unobserve(img);
                        }
                    });
                }, {
                    rootMargin: '50px 0px',
                    threshold: 0.1
                });

                // Observe all gallery images
                const images = document.querySelectorAll('#gallery img');
                images.forEach(img => imageObserver.observe(img));
            }
        }
        
        initGalleryAnimations() {
            if ('IntersectionObserver' in window) {
                const animationObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('gallery-item-animate');
                        }
                    });
                }, {
                    threshold: 0.1,
                    rootMargin: '0px 0px -50px 0px'
                });

                // Observe gallery items
                const galleryItems = document.querySelectorAll('[data-lightbox-trigger]');
                galleryItems.forEach((item, index) => {
                    // Add staggered delay
                    item.style.animationDelay = `${index * 0.1}s`;
                    animationObserver.observe(item);
                });
            }
        }
    }

    // Initialize gallery when DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
        new GalleryLightbox();
        
        // Initialize other gallery features
        initGalleryControls();
    });
    
    // Gallery batch navigation (if you want to show images in batches)
    function initGalleryControls() {
        const prevBtn = document.getElementById('prev-batch');
        const nextBtn = document.getElementById('next-batch');
        
        // Add functionality for batch navigation if needed
        prevBtn?.addEventListener('click', () => {
            // Implement batch navigation logic
            console.log('Previous batch');
        });
        
        nextBtn?.addEventListener('click', () => {
            // Implement batch navigation logic
            console.log('Next batch');
        });
    }
</script>