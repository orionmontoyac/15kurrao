---
import Image from "astro/components/Image.astro";
import { Icon } from "astro-icon/components";

import RunningCloud from "@components/RunningCloud.astro";
import ImageSlideBg from "@components/common/ImageSlideBg3.astro";
import Logo from "@images/logo.svg";
---

<section
    class="overflow-hidden min-h-screen h-screen relative flex flex-col justify-end"
>
    <!-- Hero Background -->
    <div class="absolute inset-0 -z-10 overflow-hidden h-full w-screen">
        <ImageSlideBg />
    </div>

    <!-- Hero Content -->
    <div
        class="relative flex flex-1 w-full justify-end md:justify-end items-end md:mx-0 pointer-events-none"
    >
        <div
            class="w-full md:w-6/12 flex flex-col justify-end items-center md:items-end text-white md:px-8 pb-12 pointer-events-auto"
        >
            <!-- Logo -->
            <div class="mb-6 flex justify-center w-full">
                <Image src={Logo} alt="Logo" class="w-3/5 md:w-1/2" />
            </div>

            <!-- Bottom Container: Subtitle and Buttons -->
            <div class="w-full flex flex-col md:justify-end items-center gap-4">
                <!-- Subtitle -->
                <div
                    class="text-lg md:text-xl text-center md:text-right flex flex-col md:flex-row items-center md:items-center justify-center md:justify-end gap-2 md:gap-6"
                >
                    <div class="flex items-center">
                        <Icon
                            name="tabler/calendar-dots"
                            class="mr-1 h-[1em] w-[1em] text-white transition-[transform] group-hover:-translate-x-1 dark:text-primary-300"
                        />
                        12 Octubre 2025
                    </div>
                    <div class="flex items-center">
                        <Icon
                            name="tabler/map-pin"
                            class="mr-1 h-[1em] w-[1em] text-white transition-[transform] group-hover:-translate-x-1 dark:text-primary-300"
                        />
                        Urrao - Antioquia
                    </div>
                </div>

                <!-- Buttons: Inscripciones, Corredores and Mas Informacion -->
                <div class="flex flex-row gap-4">
                    <!-- Countdown Timer for Registration Opening -->
                    <!-- <div
                        id="countdown-container"
                        class="before:ease relative h-12 w-48 rounded-md overflow-hidden bg-gradient-to-r from-primary-500 to-primary-600 font-bold transition-all before:absolute before:right-0 before:top-0 before:h-12 before:w-6 before:translate-x-12 before:rotate-6 before:bg-orange-700 before:opacity-10 before:duration-700 flex items-center justify-center"
                    >
                        <span
                            id="countdown-text"
                            class="relative z-10 text-sm text-white text-center px-2"
                        >
                            Cargando...
                        </span>
                    </div> -->

                    <a
                        href="/runners"
                        class="before:ease relative h-12 w-40 rounded-md overflow-hidden bg-gradient-to-r from-primary-500 to-primary-600 font-bold transition-all before:absolute before:right-0 before:top-0 before:h-12 before:w-6 before:translate-x-12 before:rotate-6 before:bg-purple-700 before:opacity-10 before:duration-700 hover:shadow-purple-500 hover:before:-translate-x-40 flex items-center justify-center"
                    >
                        <span class="relative z-10 text-xl text-white"
                            >Runners</span
                        >
                    </a>

                    <a
                        href="/#about"
                        class="before:ease relative px-2 py-2 h-12 w-40 rounded-md overflow-hidden border border-white bg-white text-black transition-all before:absolute before:right-0 before:top-0 before:h-12 before:w-6 before:translate-x-12 before:rotate-6 before:bg-white before:opacity-10 before:duration-700 hover:shadow-green-500 hover:before:-translate-x-40"
                    >
                        <span class="relative z-10 text-lg"
                            >Mas información</span
                        >
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Running Cloud -->
    <div class="absolute bottom-0 w-full">
        <RunningCloud />
    </div>
</section>

<script>
    // Registration countdown timer
    class RegistrationCountdown {
        private countdownElement: HTMLElement | null;
        private containerElement: HTMLElement | null;
        private targetDate: Date;
        private intervalId: number | null = null;

        constructor() {
            this.countdownElement = document.getElementById("countdown-text");
            this.containerElement = document.getElementById(
                "countdown-container",
            );

            // Set target date for registration opening: September 6th, 2025 at 5:00 PM Bogotá time (UTC-5)
            // Bogotá time is UTC-5, so 5:00 PM Bogotá = 10:00 PM UTC
            this.targetDate = new Date("2025-09-06T21:08:00.000Z"); // September 6th, 2025 at 10:00 PM UTC (5:00 PM Bogotá)

            this.init();
        }

        private init(): void {
            this.updateCountdown();
            this.intervalId = window.setInterval(
                () => this.updateCountdown(),
                1000,
            );
        }

        private updateCountdown(): void {
            if (!this.countdownElement || !this.containerElement) return;

            const now = new Date().getTime();
            const target = this.targetDate.getTime();
            const difference = target - now;

            if (difference <= 0) {
                // Registration is open!
                this.showRegistrationOpen();
                return;
            }

            const timeLeft = this.calculateTimeLeft(difference);
            this.displayCountdown(timeLeft);
        }

        private calculateTimeLeft(difference: number) {
            const days = Math.floor(difference / (1000 * 60 * 60 * 24));
            const hours = Math.floor(
                (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),
            );
            const minutes = Math.floor(
                (difference % (1000 * 60 * 60)) / (1000 * 60),
            );
            const seconds = Math.floor((difference % (1000 * 60)) / 1000);

            return { days, hours, minutes, seconds };
        }

        private displayCountdown(timeLeft: {
            days: number;
            hours: number;
            minutes: number;
            seconds: number;
        }): void {
            if (!this.countdownElement) return;

            // Calculate total hours including days
            const totalHours = timeLeft.days * 24 + timeLeft.hours;

            // Format with leading zeros and uppercase letters
            const hoursStr = totalHours.toString().padStart(2, "0");
            const minutesStr = timeLeft.minutes.toString().padStart(2, "0");
            const secondsStr = timeLeft.seconds.toString().padStart(2, "0");

            const displayText = `${hoursStr}H ${minutesStr}M ${secondsStr}S`;

            this.countdownElement.textContent = displayText;
        }

        private showRegistrationOpen(): void {
            if (!this.countdownElement || !this.containerElement) return;

            // Clear the interval
            if (this.intervalId) {
                clearInterval(this.intervalId);
                this.intervalId = null;
            }

            // Transform to disabled registration button
            this.containerElement.className =
                "relative h-12 w-40 rounded-md overflow-hidden bg-gradient-to-r from-gray-400 to-gray-500 font-bold transition-all flex items-center justify-center cursor-not-allowed opacity-60";

            this.countdownElement.className =
                "relative z-10 text-xl text-white";
            this.countdownElement.textContent = "Inscripciones";

            // Remove any existing click functionality and add disabled behavior
            this.containerElement.addEventListener("click", (e) => {
                e.preventDefault();
                e.stopPropagation();
                // Optional: Show a tooltip or message that registrations are closed
            });
        }

        public destroy(): void {
            if (this.intervalId) {
                clearInterval(this.intervalId);
                this.intervalId = null;
            }
        }
    }

    // Initialize countdown when DOM is ready
    function initCountdown(): void {
        new RegistrationCountdown();
    }

    // Auto-initialize
    if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", initCountdown);
    } else {
        initCountdown();
    }
</script>
